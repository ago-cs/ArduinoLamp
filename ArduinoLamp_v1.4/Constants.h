// ============= НАСТРОЙКИ =============
// ---------- МАТРИЦА ---------
#define BRIGHTNESS 10         // стандартная маскимальная яркость (0-255)
#define CURRENT_LIMIT 1000    // лимит по току в миллиамперах, автоматически управляет яркостью (пожалей свой блок питания!) 0 - выключить лимит

#define WIDTH 16              // ширина матрицы
#define HEIGHT 16             // высота матрицы

#define COLOR_ORDER GRB       // порядок цветов на ленте. Если цвет отображается некорректно - меняйте. Начать можно с RGB

#define MATRIX_TYPE 1         // тип матрицы: 0 - зигзаг, 1 - параллельная
#define CONNECTION_ANGLE 1    // угол подключения: 0 - левый нижний, 1 - левый верхний, 2 - правый верхний, 3 - правый нижний
#define STRIP_DIRECTION 0     // направление ленты из угла: 0 - вправо, 1 - вверх, 2 - влево, 3 - вниз
// при неправильной настройке матрицы вы получите предупреждение "Wrong matrix parameters! Set to default"
// шпаргалка по настройке матрицы здесь! https://alexgyver.ru/matrix_guide/

#define numHold_Time (1*1000)     // время отображения индикатора уровня яркости/скорости/масштаба
#define ButtonIR 1               // 0-кнопка 1-датчик ИК
// ============= ДЛЯ РАЗРАБОТЧИКОВ =============
#define LED_PIN 6            // пин ленты
#define CONTROL_PIN 2        // пин кнопки/ИЧ приемника
#define MODE_AMOUNT 27       // кол-во эффектов
#define NUM_LEDS WIDTH * HEIGHT
#define SEGMENTS 1            // диодов в одном "пикселе" (для создания матрицы из кусков ленты)
#define ROTATION 0            // поворот индикатора уровней
// ------------------- ТИПЫ --------------------
CRGB leds[NUM_LEDS];
GButton touch(CONTROL_PIN, HIGH_PULL, NORM_OPEN); //если сенсорна кнопка LOW_PULL
#define RANDOM_DEMO 1                         // 0,1 - включить рандомный выбор режима
#define  DEMOTIMELIMIT ( 1 * 20UL * 1000UL)   //  минуты/секунды/милисекунды время задержка между эффектами
uint32_t DemTimer = 0UL;                      // тут будет храниться время следующего переключения эффекта
bool isDemo = false;





// ----- IR REMOTE / ПУЛЬТ ДУ ----- Ppmod v1.7.16b
/*  Для сопряжения практически любого пульта требуется сопоставить константы с принимаемыми кодами пульта
    Любой полученный, и дешифрированный код (Code) будет отображаться в мониторе последовательного порта при включенных GENERAL_DEBUG и DEBUG_IR
    Для обеспечения точности распознавания кода требуется направить пульт ДУ непосредственно на ИК приемник и несколько раз нажать на кнопку
    Четко полученное значение можно просто скопировать и вставить в скетч
    Некоторые системы команд пультов содержат защитныебиты позволяющие отличить, допустим, долгое нажатие от двойного клика, или счетчики кликов или ID пульта
    Для того, чтобы подавить такую информацию и оставить требуемую установите константу ir_CODEMASK
    Пример, допустим, некий пульт при последуюших нажатиях выдает коды 0xC8011040C и 0xC8011840C
        Код 1:      0x0000000C8011040C
        Код 2:      0x0000000C8011840C    
        Маска:      0xFFFFFFFFFFFF0FFF
                      ************V***
        Результат:  0x0000000C8011040C (совпадает с кодом 1)                
*/
#if (ButtonIR)
#define IR_START_STEPS 8U       // колчестро первых отсчетов нажатой кнопки при которых будет прибавляться по 1 к значению регулятора (иначе IR_REPEATE_STEP)
#define IR_REPEATE_STEP 4U      // шаг регуляторов яркости/скорости/масштаба (1...127)
#define IR_REPEATE_TIMEOUT 500U // минимальное время между посылками пульта за которое будет опредяляться состояние постоянно нажатой кнопки

// --- HP Pavilion CP04 PC6 ---
#define IR_CODEMASK 0xFFFFFFFFFFFF0FFF // маскировка отличающихся битов в кодовой посылке нажатия одной и той же клавиши
#define IR_ON 0xC8011040C              // код пульта для Включения/Выключения
#define IR_NEXT 0xC80110412            // код пульта для Следующего Эффекта
#define IR_PREVIOUS 0xC80110413        // код пульта для Предыдущего Эффекта
#define IR_BRIGHT_DOWN 0xC80110411     // код пульта для понижения Яркости
#define IR_BRIGHT_UP 0xC80110410       // код пульта для повышения Яркости
#define IR_SPEED_DOWN 0xC8011041F      // код пульта для понижения Скорости
#define IR_SPEED_UP 0xC8011041E        // код пульта для повышения Скорости
#define IR_SCALE_DOWN 0xC80110420      // код пульта для понижения Масштаба
#define IR_SCALE_UP 0xC80110421        // код пульта для повышения Масштаба
#define IR_DEMO 0xC8011044A            // код пульта для включения режима Демо


// --- SONY Car Stereo RMX-166 ---
/*#define IR_ON 0x5821          // код пульта для Включения/Выключения
#define IR_NEXT 0x1C21        // код пульта для Следующего Эффекта
#define IR_PREVIOUS 0x6C21    // код пульта для Предыдущего Эффекта
#define IR_BRIGHT_DOWN 0x6421 // код пульта для понижения Яркости
#define IR_BRIGHT_UP 0x2421   // код пульта для повышения Яркости
#define IR_SPEED_DOWN 0x5621  // код пульта для понижения Скорости
#define IR_SPEED_UP 0x1621    // код пульта для повышения Скорости
#define IR_SCALE_DOWN 0x2621  // код пульта для понижения Масштаба
#define IR_SCALE_UP 0x6621    // код пульта для повышения Масштаба*/
#endif
